#include <core.hpp>
#include <opencv2\core\cuda.inl.hpp>
#include <opencv2\imgcodecs.hpp>
#include <opencv2\highgui.hpp>
#include <opencv2\imgproc.hpp>
using namespace cv;
void whiteFace(cv::Mat& matSelfPhoto, int alpha, int beta)

{

	for (int y = 0; y < matSelfPhoto.rows; y++)

	{

		for (int x = 0; x < matSelfPhoto.cols; x++)

		{

			for (int c = 0; c < 3; c++)

			{

				matSelfPhoto.at<Vec3b>(y, x)[c] = cv::saturate_cast<uchar>(alpha * (matSelfPhoto.at<Vec3b>(y, x)[c]) + beta);

			}

		}

	}

}



int main()

{

	cv::Mat matResult;

	cv::Mat src = cv::imread("D://jpg//1.png");

	int bilateralFilterVal = 30;  // 双边模糊系数

	imshow("0000", src);

	whiteFace(src, 1.1, 68);  // 调整对比度与亮度，参数2为对比度，参数3为亮度

	imshow("1111", src);

	cv::GaussianBlur(src, src, cv::Size(9, 9), 0, 0); // 高斯模糊，消除椒盐噪声

	imshow("2222", src);

	bilateralFilter(src, matResult, bilateralFilterVal, // 整体磨皮

		bilateralFilterVal * 2, bilateralFilterVal / 2);

	imshow("3333", matResult);



	cv::Mat matFinal;



	// 图像增强，使用非锐化掩蔽（Unsharpening Mask）方案。

	cv::GaussianBlur(matResult, matFinal, cv::Size(0, 0), 9);

	cv::addWeighted(matResult, 1.5, matFinal, -0.5, 0, matFinal);

	imshow("4444", matFinal);

	imwrite("E:\\test\\result.png", matFinal);

	cv::waitKey(50000);

	return 0;

}
